// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Manajemen Akun
model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  name       String
  password   String
  is_blocked Boolean  @default(false)
  role_id    Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  tokens Token[]
  carts  Cart[]
  orders Order[]
  role   Role    @relation(fields: [role_id], references: [id])

  @@map("users")
}

model Token {
  id         Int      @id @default(autoincrement())
  user_id    Int
  token      String   @unique
  expires_at DateTime
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user User @relation(fields: [user_id], references: [id])

  @@map("tokens")
}

model Role {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  users       User[]
  permissions PermissionRole[]

  @@map("roles")
}

model Permission {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  roles PermissionRole[]

  @@map("permissions")
}

model PermissionRole {
  permission_id Int
  role_id       Int

  permission Permission @relation(fields: [permission_id], references: [id])
  role       Role       @relation(fields: [role_id], references: [id])

  @@id([permission_id, role_id])
  @@map("permission_role")
}

// Manajemen Produk & Keranjang
model Cart {
  id         Int      @id @default(autoincrement())
  user_id    Int
  product_id Int
  quantity   Int      @default(1)
  total      Float    @default(0)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user    User    @relation(fields: [user_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])

  // @@index([product_id], map: "product_id")
  @@map("cart")
}

model OrderItem {
  id         Int      @id @default(autoincrement())
  order_id   Int
  product_id Int
  quantity   Int      @default(1)
  price      Float    @default(0)
  total      Float    @default(0)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  order   Order   @relation(fields: [order_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])

  // @@index([order_id], map: "order_id")
  // @@index([product_id], map: "product_id")
  @@map("order_items")
}

model Order {
  id         Int      @id @default(autoincrement())
  user_id    Int
  date       DateTime @default(now())
  number     String
  total      Float    @default(0)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user        User        @relation(fields: [user_id], references: [id])
  order_items OrderItem[]

  @@map("orders")
}

model Product {
  id          Int         @id @default(autoincrement())
  name        String
  category    String
  price       Float       @default(0)
  in_stock    Boolean     @default(true)
  description String?
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt
  cart        Cart[]
  order_items OrderItem[]

  @@map("products")
}
